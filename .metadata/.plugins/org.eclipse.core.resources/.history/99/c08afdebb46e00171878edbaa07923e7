package blackjack;

import java.util.LinkedList;
import java.util.List;

public class CardDeck {

	// 属性
	private List<Card> cards;
//
//	public Card getCard() {
//		return null;
//	}

	private static final String[] PATTERNS = {"spade","heart","diamond","club"};
	private static final int CARD_COUNT = 13;

	public CardDeck() {

		cards = this.generateCards();
		for(String pattern : PATTERNS) {
			for(int i = 1; i<=CARD_COUNT; i++) {
				Card card = new Card();
				String denomination = this.numberToDenomination(i);
				card.setDenomination(denomination);
				card.setPattern(pattern);
				cards.add(card);
			}

		}
	}

	private List<Card> generateCards() {

		List<Card> cards = new LinkedList<>();


		return cards;
	}

	public String numberToDenomination(int number) {

		if(number == 1) {
			return "A";
		} else if(number == 11) {
			return "J";
		} else if(number == 12) {
			return "Q";
		} else if(number == 12) {
			return "K";
		} else {
			return String.valueOf(number);
		}

	}
}
